---
layout: post
title:  "HTTP/2"
date:   2019-02-03 00:00:00 +0000
categories: [General]
tags: [http2]
---


Hypertext Transfer Protocol Version 2 (`HTTP/2`)
`HTTP/2` enables a more efficient use of network resources and a reduced perception of latency by introducing header field compression and allowing multiple concurrent exchanges on the same connection. It also introduces unsolicited push of representations from servers to clients.  
This is an alternative to, but does not obsolete, the `HTTP/1.1` message syntax. HTTP's existing semantics remain unchanged.
 
`HTTP/1.0` allowed only one request to be outstanding at a time on a given TCP connection. 

`HTTP/1.1` added request pipelining, but this only partially addressed request concurrency and still suffers from head-of-line blocking.  
Therefore, `HTTP/1.0` and `HTTP/1.1` clients that need to make many requests use multiple connections to a server in order to achieve concurrency and thereby reduce latency.  Furthermore, HTTP header fields are often repetitive and verbose, causing unnecessary network traffic as well as causing the initial TCP congestion window to quickly fill. This can result in excessive latency when multiple requests are made on a new TCP connection.
 
`HTTP/2` allows
 * interleaving of request and response messages on the same connection and uses an efficient coding for HTTP header fields. 
 * prioritization of requests, letting more important requests complete more quickly, further improving performance.
 * more efficient processing of messages through use of binary message framing.

The resulting protocol is more friendly to the network because fewer TCP connections can be used in comparison to HTTP/1.x. This means less competition with other flows and longer-lived connections, which in turn lead to better utilization of available network capacity.

[Source](https://httpwg.org/specs/rfc7540.html)
